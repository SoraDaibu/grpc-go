/*
In this exercise, your goal is to implement a ComputeAverage RPC Client Streaming API in a CalculatorService:

The function takes a stream of Request message that has one integer, and returns a Response with a double that represents the computed average
Remember to first implement the service definition in a .proto file, alongside the RPC messages
Implement the Server code first
Test the server code by implementing the Client
Example:

The client will send a stream of number (1,2,3,4) and the server will respond with (2.5), because (1+2+3+4)/4 = 2.5

Good luck!
*/

syntax = "proto3";
package calculator;
option go_package="calculatorpb";

message Calculator {
  int32 first_num = 1;
  int32 second_num = 2;
}

message CalculateRequest {
  Calculator calculator = 1;
}

message CalculateResponse {
  int32 result = 1;
}

message DecomposeRequest {
  int32 number = 1;
}

message DecomposeResponse {
  int32 decomposed_num = 1;
}

message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  double ave_num = 1;
}

service CalculatorService {
  // Unary
  rpc Calculate (CalculateRequest) returns (CalculateResponse);

  // Server Streaming
  rpc DecomposeManyTimes(DecomposeRequest) returns (stream DecomposeResponse) {};

  // Client Streaming
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};
}
